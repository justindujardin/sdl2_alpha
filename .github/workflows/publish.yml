name: Publish to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest  
            target: aarch64-unknown-linux-gnu
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc
          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Create virtual environment
      run: python -m venv .venv

    - name: Install dependencies
      shell: bash
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          source .venv/Scripts/activate
        else
          source .venv/bin/activate
        fi
        python -m pip install --upgrade pip
        pip install maturin

    # Linux cross-compilation setup
    - name: Install cross-compilation tools (Linux ARM64)
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Build wheels
      shell: bash
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          source .venv/Scripts/activate
        else
          source .venv/bin/activate
        fi
        maturin build --release --target ${{ matrix.target }} --out dist
      env:
        # Cross-compilation environment
        CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.target }}
        path: dist

  publish:
    name: Publish to PyPI
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/sdl2-alpha
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist-artifacts

    - name: Flatten artifacts
      shell: bash
      run: |
        mkdir -p dist
        find dist-artifacts -name "*.whl" -exec cp {} dist/ \;
        find dist-artifacts -name "*.tar.gz" -exec cp {} dist/ \;
        ls -la dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        # PyPI trusted publishing - no API token needed
        # Configure at https://pypi.org/manage/account/publishing/
        # Add this GitHub repository as a trusted publisher
        print-hash: true